---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}"
  # labels:
  #   app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
  #   app.kubernetes.io/instance: {{ .Release.Name | quote }}
  #   app.kubernetes.io/version: {{ .Chart.AppVersion }}
  #   helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      # labels:
      #   app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
      #   app.kubernetes.io/instance: {{ .Release.Name | quote }}
      #   helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      serviceAccountName: "{{ .Release.Name }}-hook-sa"
      restartPolicy: Never
      containers:
      - name: start-web-service
        image: "k8s.gcr.io/hyperkube:v1.12.1"
        imagePullPolicy: "IfNotPresent"
        command:
          - /bin/sh
          - -c
          - >
              kubectl patch deployment webapp-nginx -p '{"spec":{"replicas":{{ .Values.replicaCount }} }}' 

      - name: to-web-service
        image: "k8s.gcr.io/hyperkube:v1.12.1"
        imagePullPolicy: "IfNotPresent"
        command:
          - /bin/sh
          - -c
          - >
              kubectl patch service webapp-nginx -p '{"spec":{"selector":{"app.kubernetes.io/instance":"{{ .Release.Name }}","app.kubernetes.io/name":"nginx"}}}' 
      
      # Just for test
      - name: sleep
        image: "alpine:latest"
        command: ["/bin/sleep","{{ default "15" .Values.sleepyTime }}"]
