---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "{{ .Release.Name }}-hook-role"
  annotations:
    "helm.sh/hook": pre-install,post-install,pre-upgrade,post-upgrade
    "helm.sh/hook-weight": "-10"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
rules:
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["patch", "get"]
  - apiGroups: [ "apps"]
    resources: ["deployments"]
    verbs: ["patch", "get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "{{ .Release.Name }}-hook-rolebinding"
  annotations:
    "helm.sh/hook": pre-install,post-install,pre-upgrade,post-upgrade
    "helm.sh/hook-weight": "-10"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
subjects:
  - kind: ServiceAccount
    namespace: {{ .Release.Namespace }}
    name: "{{ .Release.Name }}-hook-sa"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "{{ .Release.Name }}-hook-role"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ .Release.Name }}-hook-sa"
  annotations:
    "helm.sh/hook": pre-install,post-install,pre-upgrade,post-upgrade
    "helm.sh/hook-weight": "-10"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed